{"version":3,"sources":["api/api.tsx","custom-hooks/configuration.tsx","components/MovieSlider.tsx","components/MovieSliderSection.tsx","pages/App/App.tsx","custom-hooks/movies.tsx","reportWebVitals.ts","api/request.tsx","index.tsx"],"names":["api","getConfiguration","axios","get","process","getTopRatedMovies","useConfiguration","useState","configuration","setConfiguration","useEffect","a","response","data","images","getConfig","Image","tw","img","MovieSlider","movies","itemsToShow","itemPadding","imgConfiguration","isRTL","map","movie","index","base_url","backdrop_sizes","src","length","backdrop_path","Container","div","Title","MovieSliderSection","title","App","topMovies","setMovies","results","getMovies","useTopRatedMovies","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","interceptors","request","use","url","error","Promise","reject","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAOeA,EALH,CACRC,iBAAkB,kBAAMC,IAAMC,IAAN,mCAAsCC,sCAC9DC,kBAAmB,kBAAMH,IAAMC,IAAN,qCAAwCC,mCAAxC,6BCcdE,I,EAAAA,EAff,WAA6B,IAAD,EACkBC,mBAAS,MAD3B,mBACjBC,EADiB,KACFC,EADE,KAYxB,OATAC,qBAAU,WACLF,GACY,uCAAG,4BAAAG,EAAA,sEACOX,EAAIC,mBADX,OACVW,EADU,OAEhBH,EAAiBG,EAASC,KAAKC,QAFf,2CAAH,oDAIfC,KACC,CAACP,IAEGA,G,OCVLQ,EAAQC,IAAGC,IAAN,sCAoBIC,I,IAAAA,EAhBf,YAAsE,IAA/CC,EAA8C,EAA9CA,OAA8C,IAAtCC,mBAAsC,MAA1B,EAA0B,MAAvBC,mBAAuB,MAAX,GAAW,EAC3DC,EAAmBjB,IAEzB,OACIiB,GACI,cAAC,IAAD,CAAUC,OAAK,EAACH,YAAaA,EAAaC,YAAa,CAACA,GAAxD,SAEQF,EAAOK,KAAI,SAACC,EAAcC,GAAmB,IACjCC,EAA6BL,EAA7BK,SAAUC,EAAmBN,EAAnBM,eAClB,OAAO,cAACb,EAAD,CAAOc,IAAKF,EAAWC,EAAeA,EAAeE,OAAS,GAAKL,EAAMM,eAAoBL,SCftHM,EAAYhB,IAAGiB,IAAN,uCAITC,EAAQlB,IAAGiB,IAAN,0CAaIE,MATf,YAAwD,IAAD,IAAzBC,aAAyB,MAAnB,GAAmB,EAAfjB,EAAe,EAAfA,OACpC,OACI,eAACa,EAAD,WACI,cAACE,EAAD,UAAQE,IACR,cAAC,EAAD,CAAajB,OAAQA,QCFlBkB,MAVf,WACE,IAAMC,ECAR,WAA8B,IAAD,EACGhC,mBAAS,MADZ,mBAClBa,EADkB,KACVoB,EADU,KAYzB,OATA9B,qBAAU,WACLU,GACY,uCAAG,4BAAAT,EAAA,sEACOX,EAAIK,oBADX,OACVO,EADU,OAEhB4B,EAAU5B,EAASC,KAAK4B,SAFR,2CAAH,oDAIfC,KACC,CAACtB,IAEGA,EDZSuB,GAElB,OACE,mCACIJ,GAAa,cAAC,EAAD,CAAoBF,MAAM,aAAajB,OAAQmB,OEMrDK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCPd3C,IAAMmD,aAAaC,QAAQC,KACvB,SAACD,GAEG,OADAA,EAAQE,IAAMpD,6BAAqCkD,EAAQE,IACpDF,KAEX,SAAAG,GACI,OAAOC,QAAQC,OAAOF,MCD9BG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.2b8b31c1.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = {\n    getConfiguration: () => axios.get(`/3/configuration?api_key=${process.env.REACT_APP_API_KEY}`),\n    getTopRatedMovies: () => axios.get(`/3/movie/top_rated?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`)\n};\n\nexport default api;","import { useEffect, useState } from \"react\";\nimport api from \"../api/api\";\n\nfunction useConfiguration() {\n    const [configuration, setConfiguration] = useState(null as any);\n  \n    useEffect(() => {\n      if(configuration) return;  \n      const getConfig = async () => {\n        const response = await api.getConfiguration();\n        setConfiguration(response.data.images);\n      }\n      getConfig();\n    }, [configuration]);\n  \n    return configuration;\n}\n\nexport default useConfiguration;","import Movie from \"../types/Movie\";\nimport Carousel from 'react-elastic-carousel';\nimport tw from \"tailwind-styled-components\";\nimport useConfiguration from \"../custom-hooks/configuration\";\n\nconst Image = tw.img`\n    h-60\n`;\n\nfunction MovieSlider({ movies, itemsToShow=6, itemPadding=20 }: any) {\n    const imgConfiguration = useConfiguration();\n\n    return (\n        imgConfiguration && \n            <Carousel isRTL itemsToShow={itemsToShow} itemPadding={[itemPadding]}>\n                {\n                    movies.map((movie: Movie, index: number) => {\n                        const { base_url, backdrop_sizes } = imgConfiguration;\n                        return <Image src={base_url + backdrop_sizes[backdrop_sizes.length - 1] + movie.backdrop_path} key={index} />;\n                    })\n                }\n            </Carousel>\n    );\n}\n\nexport default MovieSlider;","import MovieSlider from \"./MovieSlider\";\nimport tw from \"tailwind-styled-components\";\n\nconst Container = tw.div`\n    px-12\n`;\n\nconst Title = tw.div`\n    text-3xl\n`;\n\nfunction MovieSliderSection({ title=\"\", movies }: any) {\n    return (\n        <Container>\n            <Title>{title}</Title>\n            <MovieSlider movies={movies} />\n        </Container>\n    );\n}\n\nexport default MovieSliderSection;","import MovieSliderSection from \"../../components/MovieSliderSection\";\nimport { useTopRatedMovies } from \"../../custom-hooks/movies\";\n\nfunction App() {\n  const topMovies = useTopRatedMovies();\n\n  return (\n    <>\n      { topMovies && <MovieSliderSection title=\"Top Movies\" movies={topMovies} /> }\n    </>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\nimport api from \"../api/api\";\nimport Movie from \"../types/Movie\";\n\nfunction useTopRatedMovies() {\n    const [movies, setMovies] = useState(null as Movie[] | null);\n  \n    useEffect(() => {\n      if(movies) return;  \n      const getMovies = async () => {\n        const response = await api.getTopRatedMovies();\n        setMovies(response.data.results);\n      };\n      getMovies();\n    }, [movies])\n    \n    return movies;\n}\n\nexport { useTopRatedMovies };","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\n\naxios.interceptors.request.use(\n    (request: any) => {\n        request.url = process.env.REACT_APP_API_BASE_URL + request.url;\n        return request;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./api/request\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}