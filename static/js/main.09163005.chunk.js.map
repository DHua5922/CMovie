{"version":3,"sources":["api/api.tsx","custom-hooks/configuration.tsx","components/MovieSlider.tsx","components/MovieSliderSection.tsx","components/Navbar.tsx","global.tsx","redux/actions/searchAction.tsx","components/SearchBar.tsx","components/Page.tsx","custom-hooks/movies.tsx","pages/Home/Home.tsx","pages/MovieSearch/MovieSearch.tsx","pages/App/App.tsx","reportWebVitals.ts","api/request.tsx","redux/reducers/searchReducer.tsx","redux/reducers/allReducer.tsx","redux/store.tsx","index.tsx"],"names":["api","getConfiguration","axios","get","process","getTopRatedMovies","getPopularMovies","getNowPlayingMovies","searchMovies","query","useConfiguration","useState","configuration","setConfiguration","useEffect","a","response","data","images","getConfig","Image","tw","img","Title","div","MovieSlider","movies","itemsToShow","itemPadding","imgConfiguration","isRTL","map","movie","index","base_url","backdrop_sizes","backdrop_path","title","src","length","Container","MovieSliderSection","MyNavbar","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","redux","searchActions","updateSearchInput","input","type","payload","Field","useOnSearchSubmit","history","useHistory","useSelector","state","searchReducer","evt","preventDefault","push","SearchBar","dispatch","useDispatch","Form","onSubmit","placeholder","onChange","target","value","Page","MainComponent","className","useTopRatedMovies","setMovies","results","getMovies","usePopularMovies","useNowPlayingMovies","MainContent","movieSections","section","Home","Homepage","searchQuery","queryString","parse","window","location","search","useMovieSearch","Row","Col","xs","sm","md","lg","MovieSearch","SearchPage","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","interceptors","request","use","url","error","Promise","reject","initialState","action","allReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09163005.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = {\n    getConfiguration: () => axios.get(`/3/configuration?api_key=${process.env.REACT_APP_API_KEY}`),\n    getTopRatedMovies: () => axios.get(`/3/movie/top_rated?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`),\n    getPopularMovies: () => axios.get(`/3/movie/popular?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`),\n    getNowPlayingMovies: () => axios.get(`/3/movie/now_playing?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`),\n    searchMovies: (query: string) => axios.get(`/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&query=${query}&page=1`)\n};\n\nexport default api;","import { useEffect, useState } from \"react\";\nimport api from \"../api/api\";\n\nfunction useConfiguration() {\n    const [configuration, setConfiguration] = useState(null as any);\n  \n    useEffect(() => {\n      if(configuration) return;  \n      const getConfig = async () => {\n        const response = await api.getConfiguration();\n        setConfiguration(response.data.images);\n      }\n      getConfig();\n    }, [configuration]);\n  \n    return configuration;\n}\n\nexport default useConfiguration;","import Movie from \"../types/Movie\";\nimport Carousel from 'react-elastic-carousel';\nimport tw from \"tailwind-styled-components\";\nimport useConfiguration from \"../custom-hooks/configuration\";\n\nconst Image = tw.img`\n    h-32\n`;\n\nconst Title = tw.div`\n    text-center\n`;\n\nfunction MovieSlider({ movies, itemsToShow=6, itemPadding=8 }: any) {\n    const imgConfiguration = useConfiguration();\n\n    return (\n        imgConfiguration && \n            <Carousel isRTL itemsToShow={itemsToShow} itemPadding={[itemPadding]}>\n                {\n                    movies.map((movie: Movie, index: number) => {\n                        const { base_url, backdrop_sizes } = imgConfiguration;\n                        const { backdrop_path, title } = movie;\n                        return (\n                            <div>\n                                <Image src={base_url + backdrop_sizes[backdrop_sizes.length - 1] + backdrop_path} key={index} />\n                                <Title>{title}</Title>\n                            </div>\n                        );\n                    })\n                }\n            </Carousel>\n    );\n}\n\nexport default MovieSlider;","import MovieSlider from \"./MovieSlider\";\nimport tw from \"tailwind-styled-components\";\n\nconst Container = tw.div`\n    px-12\n`;\n\nconst Title = tw.div`\n    text-3xl\n`;\n\nfunction MovieSliderSection({ title=\"\", movies }: any) {\n    return (\n        <Container>\n            <Title>{title}</Title>\n            <MovieSlider movies={movies} />\n        </Container>\n    );\n}\n\nexport default MovieSliderSection;","import Navbar from 'react-bootstrap/Navbar';\n\nfunction MyNavbar() {\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href={process.env.REACT_APP_PUBLIC_URL}>CMovie</Navbar.Brand>\n        </Navbar>\n    );\n}\n\nexport default MyNavbar;","const redux = {\n    UPDATE_SEARCH_INPUT: \"UPDATE_SEARCH_INPUT\",\n    SEARCH_MOVIES: \"SEARCH_MOVIES\"\n};\n\nexport { redux };","import { redux } from \"../../global\";\n\nconst searchActions = {\n    updateSearchInput: (input: string) => {\n        return {\n            type: redux.UPDATE_SEARCH_INPUT,\n            payload: input\n        };\n    }\n};\n\nexport default searchActions;","import { Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport searchActions from \"../redux/actions/searchAction\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport tw from \"tailwind-styled-components\";\n\nconst Field = tw.input`\n    focus:border-0\n    w-full\n    focus:outline-none\n    shadow-md\n    rounded-3xl\n    px-4\n    py-2\n`;\n\nfunction useOnSearchSubmit() {\n    const history = useHistory();\n    const { input } = useSelector((state: any) => state.searchReducer);\n\n    return (evt: { preventDefault: () => void; }) => {\n        evt.preventDefault();\n        history.push(`/search?query=${input}`);\n    }\n}\n\nfunction SearchBar() {\n    const dispatch = useDispatch();\n    const { input } = useSelector((state: any) => state.searchReducer);\n\n    return (\n        <Form onSubmit={useOnSearchSubmit()}>\n            <Field \n                placeholder=\"Search movies...\" \n                onChange={(evt: { target: { value: string; }; }) => dispatch(searchActions.updateSearchInput(evt.target.value))}\n                value={input}\n            />\n        </Form>\n    );\n}\n\nexport default SearchBar;","import MyNavbar from \"./Navbar\"\nimport SearchBar from \"./SearchBar\";\n\nfunction Page(MainComponent: any) {\n    return function PageComponent() {\n        return (\n            <>\n                <MyNavbar />\n                <div className=\"py-4 px-12\">\n                    <SearchBar />\n                </div>\n                <MainComponent />\n            </>\n        );\n    }\n}\n\nexport default Page;","import { useEffect, useState } from \"react\";\nimport api from \"../api/api\";\nimport Movie from \"../types/Movie\";\n\nfunction useTopRatedMovies() {\n    const [movies, setMovies] = useState(null as Movie[] | null);\n  \n    useEffect(() => {\n      if(movies) return;  \n      const getMovies = async () => {\n        const response = await api.getTopRatedMovies();\n        setMovies(response.data.results);\n      };\n      getMovies();\n    }, [movies])\n    \n    return movies;\n}\n\nfunction usePopularMovies() {\n    const [movies, setMovies] = useState(null as Movie[] | null);\n  \n    useEffect(() => {\n      if(movies) return;  \n      const getMovies = async () => {\n        const response = await api.getPopularMovies();\n        setMovies(response.data.results);\n      };\n      getMovies();\n    }, [movies])\n    \n    return movies;\n}\n\nfunction useNowPlayingMovies() {\n  const [movies, setMovies] = useState(null as Movie[] | null);\n\n  useEffect(() => {\n    if(movies) return;  \n    const getMovies = async () => {\n      const response = await api.getNowPlayingMovies();\n      setMovies(response.data.results);\n    };\n    getMovies();\n  }, [movies])\n  \n  return movies;\n}\n\nfunction useMovieSearch(query: string) {\n  const [movies, setMovies] = useState(null as Movie[] | null);\n\n  useEffect(() => {\n    if(movies) return;  \n    const getMovies = async () => {\n      const response = await api.searchMovies(query);\n      setMovies(response.data.results);\n    };\n    getMovies();\n  }, [movies, query])\n  \n  return movies;\n}\n\nexport { \n  useTopRatedMovies,\n  usePopularMovies,\n  useNowPlayingMovies,\n  useMovieSearch\n};","import MovieSliderSection from \"../../components/MovieSliderSection\";\nimport Page from \"../../components/Page\";\nimport { \n  useTopRatedMovies, \n  usePopularMovies,\n  useNowPlayingMovies\n} from \"../../custom-hooks/movies\";\n\nfunction MainContent() {\n    const movieSections = [\n        {\n          title: \"Top Movies\",\n          movies: useTopRatedMovies()\n        },\n        {\n          title: \"Popular Movies\",\n          movies: usePopularMovies()\n        },\n        {\n          title: \"Now Playing\",\n          movies: useNowPlayingMovies()\n        }\n    ];\n    \n    return (\n        <>\n          {\n            movieSections.map(section => (\n              <>\n                { section.movies && <MovieSliderSection {...section} /> }\n              </>\n            ))\n          }\n        </>\n    );\n}\n\nfunction Home() {\n    const Homepage = Page(MainContent);\n    return <Homepage />\n}\n\nexport default Home;","// @ts-ignore\nimport queryString from \"query-string\";\nimport Page from \"../../components/Page\";\nimport searchActions from \"../../redux/actions/searchAction\";\nimport { useDispatch } from \"react-redux\";\nimport { useMovieSearch } from \"../../custom-hooks/movies\";\nimport { Row, Col } from \"react-bootstrap\";\nimport useConfiguration from \"../../custom-hooks/configuration\";\nimport tw from \"tailwind-styled-components\";\nimport Movie from \"../../types/Movie\";\n\nconst Image = tw.img`\n`;\n\nconst Title = tw.div`\n    text-center\n`;\n\nfunction MainContent() {\n    const searchQuery: string = queryString.parse(window.location.search).query;\n    const dispatch = useDispatch();\n    dispatch(searchActions.updateSearchInput(searchQuery));\n    const movies = useMovieSearch(searchQuery);\n    const imgConfiguration = useConfiguration();\n\n    return (\n        <Row className=\"px-12\">\n            { imgConfiguration && movies &&\n                movies.map((movie: Movie, index: number) => {\n                    const { backdrop_sizes, base_url } = imgConfiguration;\n                    const { backdrop_path, title } = movie;\n                    return (\n                        <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" key={index} className=\"p-4\">\n                            <div className=\"shadow-md\">\n                                <Image src={base_url + backdrop_sizes[backdrop_sizes.length - 1] + backdrop_path}/>\n                                <Title>{title}</Title>\n                            </div>\n                        </Col>\n                    );\n                })\n            }\n        </Row>\n    );\n}\n\nfunction MovieSearch() {\n    const SearchPage = Page(MainContent);\n    return <SearchPage />;\n}\n\nexport default MovieSearch;","import Home from \"../Home/Home\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport MovieSearch from \"../MovieSearch/MovieSearch\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.REACT_APP_PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/search\" component={MovieSearch} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\n\naxios.interceptors.request.use(\n    (request: any) => {\n        request.url = process.env.REACT_APP_API_BASE_URL + request.url;\n        return request;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n);","import { redux } from \"../../global\";\n\ninterface Payload {\n    type: string\n    payload: string\n}\n\nconst initialState = {\n    input: \"\" as string\n};\n\nfunction searchReducer(state=initialState, action: Payload) {\n    const { type, payload } = action;\n    if(type === redux.UPDATE_SEARCH_INPUT) {\n        return {\n            input: payload\n        };\n    }\n    return state;\n}\n\nexport default searchReducer;","import { combineReducers } from \"redux\";\nimport searchReducer from \"./searchReducer\";\n\nconst allReducer = combineReducers({\n    searchReducer\n});\n\nexport default allReducer;","import { createStore } from \"redux\";\nimport allReducer from \"./reducers/allReducer\";\n\nconst store = createStore(allReducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './tailwind.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './pages/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./api/request\";\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}