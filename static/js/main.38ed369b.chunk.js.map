{"version":3,"sources":["api/api.tsx","custom-hooks/configuration.tsx","components/MovieSlider.tsx","components/MovieSliderSection.tsx","components/Navbar.tsx","components/Page.tsx","custom-hooks/movies.tsx","pages/Home/Home.tsx","pages/App/App.tsx","reportWebVitals.ts","api/request.tsx","index.tsx"],"names":["api","getConfiguration","axios","get","process","getTopRatedMovies","getPopularMovies","getNowPlayingMovies","useConfiguration","useState","configuration","setConfiguration","useEffect","a","response","data","images","getConfig","Image","tw","img","Title","div","MovieSlider","movies","itemsToShow","itemPadding","imgConfiguration","isRTL","map","movie","index","base_url","backdrop_sizes","backdrop_path","title","src","length","Container","MovieSliderSection","MyNavbar","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Page","MainComponent","useTopRatedMovies","setMovies","results","getMovies","usePopularMovies","useNowPlayingMovies","MainContent","movieSections","section","Home","Homepage","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","interceptors","request","use","url","error","Promise","reject","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38ed369b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = {\n    getConfiguration: () => axios.get(`/3/configuration?api_key=${process.env.REACT_APP_API_KEY}`),\n    getTopRatedMovies: () => axios.get(`/3/movie/top_rated?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`),\n    getPopularMovies: () => axios.get(`/3/movie/popular?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`),\n    getNowPlayingMovies: () => axios.get(`/3/movie/now_playing?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`)\n};\n\nexport default api;","import { useEffect, useState } from \"react\";\nimport api from \"../api/api\";\n\nfunction useConfiguration() {\n    const [configuration, setConfiguration] = useState(null as any);\n  \n    useEffect(() => {\n      if(configuration) return;  \n      const getConfig = async () => {\n        const response = await api.getConfiguration();\n        setConfiguration(response.data.images);\n      }\n      getConfig();\n    }, [configuration]);\n  \n    return configuration;\n}\n\nexport default useConfiguration;","import Movie from \"../types/Movie\";\nimport Carousel from 'react-elastic-carousel';\nimport tw from \"tailwind-styled-components\";\nimport useConfiguration from \"../custom-hooks/configuration\";\n\nconst Image = tw.img`\n    h-32\n`;\n\nconst Title = tw.div`\n    text-center\n`;\n\nfunction MovieSlider({ movies, itemsToShow=6, itemPadding=8 }: any) {\n    const imgConfiguration = useConfiguration();\n\n    return (\n        imgConfiguration && \n            <Carousel isRTL itemsToShow={itemsToShow} itemPadding={[itemPadding]}>\n                {\n                    movies.map((movie: Movie, index: number) => {\n                        const { base_url, backdrop_sizes } = imgConfiguration;\n                        const { backdrop_path, title } = movie;\n                        return (\n                            <div>\n                                <Image src={base_url + backdrop_sizes[backdrop_sizes.length - 1] + backdrop_path} key={index} />\n                                <Title>{title}</Title>\n                            </div>\n                        );\n                    })\n                }\n            </Carousel>\n    );\n}\n\nexport default MovieSlider;","import MovieSlider from \"./MovieSlider\";\nimport tw from \"tailwind-styled-components\";\n\nconst Container = tw.div`\n    px-12\n`;\n\nconst Title = tw.div`\n    text-3xl\n`;\n\nfunction MovieSliderSection({ title=\"\", movies }: any) {\n    return (\n        <Container>\n            <Title>{title}</Title>\n            <MovieSlider movies={movies} />\n        </Container>\n    );\n}\n\nexport default MovieSliderSection;","import Navbar from 'react-bootstrap/Navbar';\n\nfunction MyNavbar() {\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href={process.env.REACT_APP_PUBLIC_URL}>CMovie</Navbar.Brand>\n        </Navbar>\n    );\n}\n\nexport default MyNavbar;","import MyNavbar from \"./Navbar\"\n\nfunction Page(MainComponent: any) {\n    return function PageComponent() {\n        return (\n            <>\n                <MyNavbar />\n                <MainComponent />\n            </>\n        );\n    }\n}\n\nexport default Page;","import { useEffect, useState } from \"react\";\nimport api from \"../api/api\";\nimport Movie from \"../types/Movie\";\n\nfunction useTopRatedMovies() {\n    const [movies, setMovies] = useState(null as Movie[] | null);\n  \n    useEffect(() => {\n      if(movies) return;  \n      const getMovies = async () => {\n        const response = await api.getTopRatedMovies();\n        setMovies(response.data.results);\n      };\n      getMovies();\n    }, [movies])\n    \n    return movies;\n}\n\nfunction usePopularMovies() {\n    const [movies, setMovies] = useState(null as Movie[] | null);\n  \n    useEffect(() => {\n      if(movies) return;  \n      const getMovies = async () => {\n        const response = await api.getPopularMovies();\n        setMovies(response.data.results);\n      };\n      getMovies();\n    }, [movies])\n    \n    return movies;\n}\n\nfunction useNowPlayingMovies() {\n  const [movies, setMovies] = useState(null as Movie[] | null);\n\n  useEffect(() => {\n    if(movies) return;  \n    const getMovies = async () => {\n      const response = await api.getNowPlayingMovies();\n      setMovies(response.data.results);\n    };\n    getMovies();\n  }, [movies])\n  \n  return movies;\n}\n\nexport { \n  useTopRatedMovies,\n  usePopularMovies,\n  useNowPlayingMovies\n};","import MovieSliderSection from \"../../components/MovieSliderSection\";\nimport Page from \"../../components/Page\";\nimport { \n  useTopRatedMovies, \n  usePopularMovies,\n  useNowPlayingMovies\n} from \"../../custom-hooks/movies\";\n\nfunction MainContent() {\n    const movieSections = [\n        {\n          title: \"Top Movies\",\n          movies: useTopRatedMovies()\n        },\n        {\n          title: \"Popular Movies\",\n          movies: usePopularMovies()\n        },\n        {\n          title: \"Now Playing\",\n          movies: useNowPlayingMovies()\n        }\n    ];\n    \n    return (\n        <>\n          {\n            movieSections.map(section => (\n              <>\n                { section.movies && <MovieSliderSection {...section} /> }\n              </>\n            ))\n          }\n        </>\n    );\n}\n\nfunction Home() {\n    const Homepage = Page(MainContent);\n    return <Homepage />\n}\n\nexport default Home;","import Home from \"../Home/Home\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router basename={process.env.REACT_APP_PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\n\naxios.interceptors.request.use(\n    (request: any) => {\n        request.url = process.env.REACT_APP_API_BASE_URL + request.url;\n        return request;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './tailwind.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './pages/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./api/request\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}