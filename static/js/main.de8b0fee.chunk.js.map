{"version":3,"sources":["api/api.tsx","custom-hooks/configuration.tsx","components/MovieDisplay.tsx","global.tsx","redux/actions/popupAction.tsx","components/MovieSlider.tsx","components/MovieSliderSection.tsx","components/Navbar.tsx","redux/actions/searchAction.tsx","components/SearchBar.tsx","components/MovieInfoPopup.tsx","components/Page.tsx","custom-hooks/movies.tsx","pages/Home/Home.tsx","pages/MovieSearch/MovieSearch.tsx","pages/App/App.tsx","reportWebVitals.ts","api/request.tsx","redux/reducers/searchReducer.tsx","redux/reducers/popupReducer.tsx","redux/reducers/allReducer.tsx","redux/store.tsx","index.tsx"],"names":["api","getConfiguration","axios","get","process","getTopRatedMovies","getPopularMovies","getNowPlayingMovies","searchMovies","query","useConfiguration","useState","configuration","setConfiguration","useEffect","a","response","data","images","getConfig","formatMovie","movie","backdrop_sizes","base_url","backdrop_path","length","hasImage","Container","tw","div","Title","MovieDisplay","title","onClick","src","alt","redux","popupActions","openPopup","type","payload","closePopup","MovieSlider","movies","imgConfiguration","dispatch","useDispatch","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","map","index","formattedMovie","className","MovieSliderSection","MyNavbar","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","searchActions","updateSearchInput","input","Field","useOnSearchSubmit","history","useHistory","useSelector","state","searchReducer","evt","preventDefault","push","SearchBar","Form","onSubmit","placeholder","onChange","target","value","MovieInfoPopup","show","onHide","movieInfo","overview","Modal","centered","Header","closeButton","Body","MainContainer","styled","Page","MainComponent","popupReducer","useTopRatedMovies","setMovies","results","getMovies","usePopularMovies","useNowPlayingMovies","MainContent","movieSections","section","Home","Homepage","searchQuery","queryString","parse","window","location","search","useMovieSearch","Row","Col","xs","sm","md","lg","MovieSearch","SearchPage","App","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","interceptors","request","use","url","error","Promise","reject","initialState","action","allReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de8b0fee.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = {\n    getConfiguration: () => axios.get(`/3/configuration?api_key=${process.env.REACT_APP_API_KEY}`),\n    getTopRatedMovies: () => axios.get(`/3/movie/top_rated?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`),\n    getPopularMovies: () => axios.get(`/3/movie/popular?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`),\n    getNowPlayingMovies: () => axios.get(`/3/movie/now_playing?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`),\n    searchMovies: (query: string) => axios.get(`/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&query=${query}&page=1`)\n};\n\nexport default api;","import { useEffect, useState } from \"react\";\nimport api from \"../api/api\";\nimport Movie from \"../types/Movie\";\n\nfunction useConfiguration() {\n    const [configuration, setConfiguration] = useState(null as any);\n  \n    useEffect(() => {\n      if(configuration) return;  \n      const getConfig = async () => {\n        const response = await api.getConfiguration();\n        setConfiguration(response.data.images);\n      }\n      getConfig();\n    }, [configuration]);\n  \n    return configuration;\n}\n\nfunction formatMovie(configuration: any, movie: Movie): Movie {\n  const { backdrop_sizes, base_url } = configuration;\n  const { backdrop_path } = movie;\n  return {\n    ...movie,\n    backdrop_path: base_url + backdrop_sizes[backdrop_sizes.length - 1] + backdrop_path,\n    hasImage: backdrop_path ? true : false\n  };\n}\n\nexport { useConfiguration, formatMovie };","import tw from \"tailwind-styled-components\";\n\nconst Container = tw.div`\n    shadow-md\n    cursor-pointer\n`;\n\nconst Title = tw.div`\n    text-center\n`;\n\ninterface Props {\n    title: string\n    backdrop_path: string\n    onClick: React.MouseEventHandler<HTMLDivElement> | undefined\n}\n\nfunction MovieDisplay({ title, backdrop_path, onClick }: Props) {\n    return (\n        <Container onClick={onClick}>\n            <img src={backdrop_path} alt=\"\" />\n            <Title>{title}</Title>\n        </Container>\n    );\n}\n\nexport default MovieDisplay;","const redux = {\n    UPDATE_SEARCH_INPUT: \"UPDATE_SEARCH_INPUT\",\n    SEARCH_MOVIES: \"SEARCH_MOVIES\",\n    CLOSE_POPUP: \"CLOSE_POPUP\",\n    OPEN_POPUP: \"OPEN_POPUP\"\n};\n\nexport { redux };","import { redux } from \"../../global\";\nimport Movie from \"../../types/Movie\";\n\nconst popupActions = {\n    openPopup: (movie: Movie) => {\n        return {\n            type: redux.OPEN_POPUP,\n            payload: movie\n        };\n    },\n    closePopup: () => {\n        return {\n            type: redux.CLOSE_POPUP\n        }\n    }\n};\n\nexport default popupActions;","import Movie from \"../types/Movie\";\nimport { useConfiguration, formatMovie } from \"../custom-hooks/configuration\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport MovieDisplay from \"./MovieDisplay\";\nimport { useDispatch } from \"react-redux\";\nimport popupActions from \"../redux/actions/popupAction\";\n\ninterface Props {\n    movies: Movie[]\n}\n\nfunction MovieSlider({ movies }: Props) {\n    const imgConfiguration = useConfiguration();\n    const dispatch = useDispatch();\n\n    const responsive = {\n        superLargeDesktop: {\n          breakpoint: { max: 4000, min: 3000 },\n          items: 5\n        },\n        desktop: {\n          breakpoint: { max: 3000, min: 1024 },\n          items: 3\n        },\n        tablet: {\n          breakpoint: { max: 1024, min: 464 },\n          items: 2\n        },\n        mobile: {\n          breakpoint: { max: 464, min: 0 },\n          items: 1\n        }\n    };\n\n    return (\n        imgConfiguration && \n            <Carousel responsive={responsive}>\n                {\n                    movies.map((movie: Movie, index: number) => {\n                        const formattedMovie: Movie = formatMovie(imgConfiguration, movie);\n                        return (\n                            <div className=\"my-2 mx-3\" key={index}>\n                                <MovieDisplay \n                                    {...formattedMovie}\n                                    onClick={() => dispatch(popupActions.openPopup(formattedMovie))}\n                                />\n                            </div>\n                        );\n                    })\n                }\n            </Carousel>\n    );\n}\n\nexport default MovieSlider;","import MovieSlider from \"./MovieSlider\";\nimport tw from \"tailwind-styled-components\";\n\nconst Title = tw.div`\n    text-3xl\n    pb-3\n`;\n\nfunction MovieSliderSection({ title=\"\", movies }: any) {\n    return (\n        <div className=\"pt-3\">\n            <Title>{title}</Title>\n            <MovieSlider movies={movies} />\n        </div>\n    );\n}\n\nexport default MovieSliderSection;","import Navbar from 'react-bootstrap/Navbar';\n\nfunction MyNavbar() {\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href={process.env.REACT_APP_PUBLIC_URL}>CMovie</Navbar.Brand>\n        </Navbar>\n    );\n}\n\nexport default MyNavbar;","import { redux } from \"../../global\";\n\nconst searchActions = {\n    updateSearchInput: (input: string) => {\n        return {\n            type: redux.UPDATE_SEARCH_INPUT,\n            payload: input\n        };\n    }\n};\n\nexport default searchActions;","import { Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport searchActions from \"../redux/actions/searchAction\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport tw from \"tailwind-styled-components\";\n\nconst Field = tw.input`\n    focus:border-0\n    w-full\n    focus:outline-none\n    shadow-md\n    rounded-3xl\n    px-4\n    py-2\n`;\n\nfunction useOnSearchSubmit() {\n    const history = useHistory();\n    const { input } = useSelector((state: any) => state.searchReducer);\n\n    return (evt: { preventDefault: () => void; }) => {\n        evt.preventDefault();\n        history.push(`/search?query=${input}`);\n    }\n}\n\nfunction SearchBar() {\n    const dispatch = useDispatch();\n    const { input } = useSelector((state: any) => state.searchReducer);\n\n    return (\n        <Form onSubmit={useOnSearchSubmit()}>\n            <Field \n                placeholder=\"Search movies...\" \n                onChange={(evt: { target: { value: string; }; }) => dispatch(searchActions.updateSearchInput(evt.target.value))}\n                value={input}\n            />\n        </Form>\n    );\n}\n\nexport default SearchBar;","import { Modal } from \"react-bootstrap\";\nimport Movie from \"../types/Movie\";\n\ninterface Props {\n    show: boolean\n    onHide: Function\n    movieInfo: Movie\n    hasImage: boolean\n}\n\nfunction MovieInfoPopup({ show, onHide, movieInfo, hasImage }: Props) {\n    const { title, backdrop_path, overview } = movieInfo;\n    return (\n        <Modal show={show} onHide={onHide} centered>\n            <Modal.Header closeButton>\n                <Modal.Title>{title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <img\n                    className={hasImage ? \"pb-3\" : \"pb-0\" } \n                    src={backdrop_path} \n                    alt=\"\" \n                />\n                <div>{overview}</div>\n            </Modal.Body>\n        </Modal>\n    );\n}\n\nexport default MovieInfoPopup;","import MyNavbar from \"./Navbar\"\nimport SearchBar from \"./SearchBar\";\nimport styled from \"styled-components\";\nimport MovieInfoPopup from \"./MovieInfoPopup\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport popupActions from \"../redux/actions/popupAction\";\n\nconst MainContainer = styled.div`\n    padding: 30px 8vw;\n`;\n\nfunction Page(MainComponent: any) {\n    return function PageComponent() {\n        const dispatch = useDispatch();\n        const { movieInfo, show } = useSelector((state: any) => state.popupReducer);\n\n        return (\n            <>\n                <MyNavbar />\n                <MainContainer>\n                    <SearchBar />\n                    <MainComponent />\n                </MainContainer>\n                <MovieInfoPopup \n                    show={show}\n                    onHide={() => dispatch(popupActions.closePopup())}\n                    movieInfo={movieInfo}\n                    hasImage={movieInfo.hasImage}\n                />\n            </>\n        );\n    }\n}\n\nexport default Page;","import { useEffect, useState } from \"react\";\nimport api from \"../api/api\";\nimport Movie from \"../types/Movie\";\n\nfunction useTopRatedMovies() {\n    const [movies, setMovies] = useState(null as Movie[] | null);\n  \n    useEffect(() => {\n      if(movies) return;  \n      const getMovies = async () => {\n        const response = await api.getTopRatedMovies();\n        setMovies(response.data.results);\n      };\n      getMovies();\n    }, [movies])\n    \n    return movies;\n}\n\nfunction usePopularMovies() {\n    const [movies, setMovies] = useState(null as Movie[] | null);\n  \n    useEffect(() => {\n      if(movies) return;  \n      const getMovies = async () => {\n        const response = await api.getPopularMovies();\n        setMovies(response.data.results);\n      };\n      getMovies();\n    }, [movies])\n    \n    return movies;\n}\n\nfunction useNowPlayingMovies() {\n  const [movies, setMovies] = useState(null as Movie[] | null);\n\n  useEffect(() => {\n    if(movies) return;  \n    const getMovies = async () => {\n      const response = await api.getNowPlayingMovies();\n      setMovies(response.data.results);\n    };\n    getMovies();\n  }, [movies])\n  \n  return movies;\n}\n\nfunction useMovieSearch(query: string) {\n  const [movies, setMovies] = useState(null as Movie[] | null);\n\n  useEffect(() => {\n    if(movies) return;  \n    const getMovies = async () => {\n      const response = await api.searchMovies(query);\n      setMovies(response.data.results);\n    };\n    getMovies();\n  }, [movies, query])\n  \n  return movies;\n}\n\nexport { \n  useTopRatedMovies,\n  usePopularMovies,\n  useNowPlayingMovies,\n  useMovieSearch\n};","import MovieSliderSection from \"../../components/MovieSliderSection\";\nimport Page from \"../../components/Page\";\nimport { \n  useTopRatedMovies, \n  usePopularMovies,\n  useNowPlayingMovies\n} from \"../../custom-hooks/movies\";\n\nfunction MainContent() {\n    const movieSections = [\n        {\n          title: \"Top Movies\",\n          movies: useTopRatedMovies()\n        },\n        {\n          title: \"Popular Movies\",\n          movies: usePopularMovies()\n        },\n        {\n          title: \"Now Playing\",\n          movies: useNowPlayingMovies()\n        }\n    ];\n    \n    return (\n        <div className=\"px-8 pt-2\">\n          {\n            movieSections.map(section => (\n              <>\n                { section.movies && <MovieSliderSection {...section} /> }\n              </>\n            ))\n          }\n        </div>\n    );\n}\n\nfunction Home() {\n    const Homepage = Page(MainContent);\n    return <Homepage />\n}\n\nexport default Home;","// @ts-ignore\nimport queryString from \"query-string\";\nimport Page from \"../../components/Page\";\nimport searchActions from \"../../redux/actions/searchAction\";\nimport { useDispatch } from \"react-redux\";\nimport { useMovieSearch } from \"../../custom-hooks/movies\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { useConfiguration, formatMovie } from \"../../custom-hooks/configuration\";\nimport Movie from \"../../types/Movie\";\nimport MovieDisplay from \"../../components/MovieDisplay\";\nimport popupActions from \"../../redux/actions/popupAction\";\n\nfunction MainContent() {\n    const searchQuery: string = queryString.parse(window.location.search).query;\n    const dispatch = useDispatch();\n    dispatch(searchActions.updateSearchInput(searchQuery));\n    const movies = useMovieSearch(searchQuery);\n    const imgConfiguration = useConfiguration();\n\n    return (\n        <Row className=\"px-12\">\n            { imgConfiguration && movies &&\n                movies.map((movie: Movie, index: number) => {\n                    const formattedMovie: Movie = formatMovie(imgConfiguration, movie);\n                    return (\n                        <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" key={index} className=\"p-4\">\n                            <MovieDisplay \n                                {...formattedMovie}\n                                onClick={() => dispatch(popupActions.openPopup(formattedMovie))}\n\n                            />\n                        </Col>\n                    );\n                })\n            }\n        </Row>\n    );\n}\n\nfunction MovieSearch() {\n    const SearchPage = Page(MainContent);\n    return <SearchPage />;\n}\n\nexport default MovieSearch;","import Home from \"../Home/Home\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport MovieSearch from \"../MovieSearch/MovieSearch\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.REACT_APP_PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/search\" component={MovieSearch} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\n\naxios.interceptors.request.use(\n    (request: any) => {\n        request.url = process.env.REACT_APP_API_BASE_URL + request.url;\n        return request;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n);","import { redux } from \"../../global\";\n\ninterface Payload {\n    type: string\n    payload: string\n}\n\nconst initialState = {\n    input: \"\" as string\n};\n\nfunction searchReducer(state=initialState, action: Payload) {\n    const { type, payload } = action;\n    if(type === redux.UPDATE_SEARCH_INPUT) {\n        return {\n            input: payload\n        };\n    }\n    return state;\n}\n\nexport default searchReducer;","import { redux } from \"../../global\";\nimport Movie from \"../../types/Movie\";\n\ninterface Payload {\n    type: string\n    payload: boolean | Movie\n}\n\nconst initialState = {\n    show: false as boolean,\n    movieInfo: {\n        title: \"\" as string,\n        backdrop_path: \"\" as string,\n        overview: \"\" as string\n    } as Movie\n};\n\nfunction popupReducer(state=initialState, action: Payload) {\n    const { type } = action;\n    if(type === redux.CLOSE_POPUP) {\n        return {\n            show: false,\n            movieInfo: state.movieInfo\n        };\n    }\n    else if(type === redux.OPEN_POPUP) {\n        return {\n            show: true,\n            movieInfo: action.payload\n        };\n    }\n    return state;\n}\n\nexport default popupReducer;","import { combineReducers } from \"redux\";\nimport searchReducer from \"./searchReducer\";\nimport popupReducer from \"./popupReducer\";\n\nconst allReducer = combineReducers({\n    searchReducer,\n    popupReducer\n});\n\nexport default allReducer;","import { createStore } from \"redux\";\nimport allReducer from \"./reducers/allReducer\";\n\nconst store = createStore(allReducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './tailwind.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './pages/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./api/request\";\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}